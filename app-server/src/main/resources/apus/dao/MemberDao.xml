<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="apus.dao.MemberDao">
  
  <resultMap type="Member" id="MemberMap">
    <id column="member_no" property="no"/> 
    <result column="name" property="name"/>
    <result column="id" property="id"/>
    <result column="password" property="password"/>
    <result column="birth" property="birthDay"/>
    <result column="email" property="email"/>
    <result column="tel" property="phoneNum"/>
    <result column="photo" property="photo"/>
    <result column="sex" property="sex"/>
    <result column="created_dt" property="registeredDate"/>
    <result column="role" property="doctorOrNot"/>
    <result column="point" property="point"/>
    <result column="active" property="active"/>
    
    <association property="doctor" javaType="Doctor">
      <id column="doctor_no" property="no"/>
      <result column="major" property="major"/>
      <result column="license" property="license"/>
      <result column="homepage" property="homepage"/>
      <result column="introduction" property="introduction"/>
    </association>
    
  </resultMap>
  
  
  <select id="findAll" resultMap="MemberMap">
    select
       m.member_no,
       m.name,
       m.id,
       m.password,
       m.birth,
       m.email,
       m.tel,
       m.photo,
       m.sex,
       m.created_dt,
       m.point,
       m.role,
       m.active,
       d.doctor_no,
       d.major,
       d.license,
       d.homepage,
       d.introduction
    from
      apus_member m
      left outer join apus_doctor d on m.member_no=d.doctor_no
  </select>
  
    <select id="findDoctor" resultMap="MemberMap">
    select * from apus_member where role = 2;
  </select>
  
    <select id="findDoctorMajor" resultMap="MemberMap" parameterType="member">
    select * 
      from apus_member m
      left outer join apus_doctor d on m.member_no=d.doctor_no
    where
      name=#{name};
    
  </select>
 
  <select id="findMan" resultMap="MemberMap">
    select * from apus_member where role = 2 and sex = '남';
  </select>
  
  <select id="findWoman" resultMap="MemberMap">
    select * from apus_member where role = 2 and sex = '여';
  </select>
  
    <select id="check" resultMap="MemberMap" parameterType="member">
    select
      id
    from
      apus_member
    where id=#{id}
  </select>
   
  <select id="findByIdPwd" resultMap="MemberMap" parameterType="map">
    select
      member_no,
      name,
      id,
      password,
      birth,
      tel,
      email,
      photo,
      sex,
      created_dt,
      point,
      role,
      active
    from
      apus_member
    where id=#{param1} and password=password(#{param2})
  </select>
  
  <insert id="insert" parameterType="member" 
  useGeneratedKeys="true" keyColumn="member_no" keyProperty="no">
    insert into apus_member(name,id,password,birth,tel,email,photo,sex,point,role)
    values(#{name},#{id},password(#{password}),#{birthDay},#{phoneNum},#{email},
     #{photo},#{sex},#{point},#{doctorOrNot})
   </insert>
   
   <insert id="insert2" parameterType="member">
   insert into apus_doctor(doctor_no,major,license,homepage,introduction)
   values(#{no},#{doctor.major},#{doctor.license},#{doctor.homepage},#{doctor.introduction})
  </insert>
   
   <update id="update" parameterType="member">
    update apus_member set
      name=#{name},
      id=#{id},
      password=password(#{password}),
      birth=#{birthDay},
      tel=#{phoneNum},
      email=#{email},
      photo=#{photo},
      sex=#{sex},
      point=#{point},
      role=#{doctorOrNot}
    where member_no=#{values}
   </update>
   
      <!-- 멤버 정보 변경하는 일 외에는 update2를 써야
   비밀번호가 변경되지 않음!! -->
   <update id="update2" parameterType="member">
    update apus_member set
      name=#{name},
      id=#{id},
      birth=#{birthDay},
      tel=#{phoneNum},
      email=#{email},
      photo=#{photo},
      sex=#{sex},
      point=#{point},
      role=#{doctorOrNot}
    where member_no=#{no}
   </update>
    
   <delete id="delete" parameterType="string">
    delete from apus_member
    where id=#{id}
   </delete>
   
   <select id="findById" resultMap="MemberMap" parameterType="string">
    select
      member_no,
      name,
      id,
      password,
      birth,
      tel,
      email,
      photo,
      sex,
      created_dt,
      point,
      role,
      active
    from
      apus_member
    where id=#{id}
   </select>
   
   <select id="findByName" resultMap="MemberMap" parameterType="string">
   select
      member_no,
      name,
      id,
      password,
      birth,
      tel,
      email,
      photo,
      sex,
      created_dt,
      point,
      role,
      active
    from
      apus_member
    where name=#{name}
  </select>
  
</mapper>






