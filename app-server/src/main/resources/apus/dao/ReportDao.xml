<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="apus.dao.ReportDao">
  
  <resultMap type="Report" id="ReportMap">
    <id column="report_no" property="no"/> 
    <result column="reason" property="reason"/>
    
    <association property="requestBoard" javaType="board">
      <id column="requestBoard_no" property="no"/>
      <result column="requestBoard_type" property="whichBoard"/>
      <result column="requestBoard_title" property="title"/>
    </association>
    
    <association property="requester" javaType="member">
      <id column="requester_no" property="no"/>
      <result column="requester_id" property="id"/>
    </association>
    
  </resultMap>
  
    <select id="findAll" resultMap="ReportMap">
    select
      r.report_no,
      r.reason,
      m.id requester_id,
      m.name requester_name,
      m.email requester_email,
      b.board_no requestBoard_no,
      b.title requestBoard_title,
      b.content requestBoard_content,
      b.type requestBoard_type
    from
      apus_report r
      inner join apus_member m on r.member_no=m.member_no
      inner join apus_board b on r.board_no=b.board_no
    order by
      r.report_no desc    

  </select>
  
  
    <insert id="insert" parameterType="report" 
  useGeneratedKeys="true" keyColumn="report_no" keyProperty="no">
    insert into apus_report(reason,member_no,board_no)
    values(#{reason},#{requester.no},#{requestBoard.no})
   </insert>
   
   <delete id="delete" parameterType="int">
   delete from apus_report
   where 
   report_no=#{no}
  </delete>
  
  <select id="findByReport" resultMap="ReportMap" >
    select 
      r.report_no,
      r.reason,
      m.id requester_id,
      m.name requester_name,
      m.email requester_email,
      b.board_no requestBoard_no,
      b.title requestBoard_title,
      b.content requestBoard_content,
      b.type requestBoard_type
    from
      apus_report r
      inner join apus_member m on r.member_no=m.member_no
      inner join apus_board b on r.board_no=b.board_no
    where 
      b.board_no=#{param1} and m.id=#{param2}
  </select>
  
  
  <!-- <select id="findReport" resultMap="ReportMap">
    select
       r.report_no,
       r.reason,
       b.board_no requestBoard_no,
       m.member_no requester_no,
       m.id requester_id
    from
      apus_report r
    inner join apus_member m on r.member_no=m.member_no
    inner join apus_board b on r.board_no=b.board_no
  </select>
  
   <select id = "findComment"  parameterType = "int">
    select 
	    c.coment_no,
	    c.content
	    m.member_no,
	    m.id
    from 
      apus_comment c
    inner join apus_member_m on c.member_no=m.member_no
    WHERE board_no =#{no}
  
  </select>
  
    <select id="findDoctor" resultMap="MemberMap">
    select * from apus_member where role = 2;
  </select>
  
    <select id="findDoctorMajor" resultMap="MemberMap" parameterType="member">
    select * 
      from apus_member m
      left outer join apus_doctor d on m.member_no=d.doctor_no
    where
      name=#{name};
    
  </select>
 
  <select id="findMan" resultMap="MemberMap">
    select * from apus_member where role = 2 and sex = '남';
  </select>
  
  <select id="findWoman" resultMap="MemberMap">
    select * from apus_member where role = 2 and sex = '여';
  </select>
  
    <select id="check" resultMap="MemberMap" parameterType="member">
    select
      id
    from
      apus_member
    where id=#{id}
  </select>
   
  <select id="findByIdPwd" resultMap="MemberMap" parameterType="map">
    select
      member_no,
      name,
      id,
      password,
      birth,
      tel,
      email,
      photo,
      sex,
      created_dt,
      point,
      role,
      active
    from
      apus_member
    where id=#{param1} and password=password(#{param2})
  </select>
  
  <insert id="insert" parameterType="member" 
  useGeneratedKeys="true" keyColumn="member_no" keyProperty="no">
    insert into apus_member(name,id,password,birth,tel,email,photo,sex,point,role)
    values(#{name},#{id},password(#{password}),#{birthDay},#{phoneNum},#{email},
     #{photo},#{sex},#{point},#{doctorOrNot})
   </insert>
   
   <insert id="insert2" parameterType="member">
   insert into apus_doctor(doctor_no,major,license,homepage,introduction)
   values(#{no},#{doctor.major},#{doctor.license},#{doctor.homepage},#{doctor.introduction})
  </insert>
   
   <update id="update" parameterType="member">
    update apus_member set
      name=#{name},
      id=#{id},
      password=password(#{password}),
      birth=#{birthDay},
      tel=#{phoneNum},
      email=#{email},
      photo=#{photo},
      sex=#{sex},
      point=#{point},
      role=#{doctorOrNot}
    where member_no=#{values}
   </update>
   
      멤버 정보 변경하는 일 외에는 update2를 써야
   비밀번호가 변경되지 않음!!
   <update id="update2" parameterType="member">
    update apus_member set
      name=#{name},
      id=#{id},
      birth=#{birthDay},
      tel=#{phoneNum},
      email=#{email},
      photo=#{photo},
      sex=#{sex},
      point=#{point},
      role=#{doctorOrNot}
    where member_no=#{no}
   </update>
    
   <delete id="delete" parameterType="string">
    delete from apus_member
    where id=#{id}
   </delete>
   
   <select id="findById" resultMap="MemberMap" parameterType="string">
    select
      member_no,
      name,
      id,
      password,
      birth,
      tel,
      email,
      photo,
      sex,
      created_dt,
      point,
      role,
      active
    from
      apus_member
    where id=#{id}
   </select>
   
   <select id="findByName" resultMap="MemberMap" parameterType="string">
   select
      member_no,
      name,
      id,
      password,
      birth,
      tel,
      email,
      photo,
      sex,
      created_dt,
      point,
      role,
      active
    from
      apus_member
    where name=#{name}
  </select> -->
  
</mapper>






